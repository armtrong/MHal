//!
//! @file				HalGpio.h
//! @author				Geoffrey Hunter <gbmhunter@gmail.com> (www.mbedded.ninja)
//! @created			2014-08-18
//! @last-modified		2014-09-12
//! @brief 				
//! @details
//!						

#ifndef __cplusplus
	#error Please build with C++ compiler
#endif

//===============================================================================================//
//======================================== HEADER GUARD =========================================//
//===============================================================================================//

#ifndef MHAL_HAL_GPIO_H
#define MHAL_HAL_GPIO_H

//===============================================================================================//
//==================================== FORWARD DECLARATION ======================================//
//===============================================================================================//

namespace MHalNs
{
	class HalGpio;
}

//===============================================================================================//
//========================================== INCLUDES ===========================================//
//===============================================================================================//

// System headers
#include <cstdint>		// int8_t, int32_t e.t.c

// User libraries
// none

// User headers
// none

//===============================================================================================//
//======================================== NAMESPACE ============================================//
//===============================================================================================//

namespace MHalNs
{
	
	//! @brief		Brief description of class.
	//! @details	Detailed description of class.
	//! @note		Not pre-scheduler safe.
	class HalGpio
	{	
		
		public:
									
			//======================================================================================//
			//==================================== PUBLIC METHODS ==================================//
			//======================================================================================//
					
			//! @brief 		PSoC Constructor
			/*HalGpio(
				uint8_t (* readPin)(),
				void (* writePin)(uint8_t lowHigh)
			);*/
		
			//! @brief		Virtual destructor.
			virtual ~HalGpio(){}
			
			//! @brief		Sets the GPIO low or high.
			virtual void Write(bool lowHigh) = 0;
			
			//! @brief		Reads the value of the pin.
			virtual bool Read() = 0;
						
			//======================================================================================//
			//================================= PUBLIC VARIABLES ===================================//
			//======================================================================================//
				
			// none
				
		private:
						
			//======================================================================================//
			//=================================== PRIVATE METHODS ==================================//
			//======================================================================================//
			
			// none
			
			//======================================================================================//
			//================================== PRIVATE VARIABLES =================================//
			//======================================================================================//

			// PSOC API
			//uint8_t (* readPin)();
			//void (* writePin)(uint8_t lowHigh);
			
		protected:

			//======================================================================================//
			//=================================== PROTECTED METHODS ================================//
			//======================================================================================//
			
			HalGpio(){};
			
			//======================================================================================//
			//================================== PROTECTED VARIABLES ===============================//
			//======================================================================================//

			// none
		
	}; // class HalGpio


} // namespace MHalNs

#endif	// #ifndef MHAL_HAL_GPIO_H

// EOF
